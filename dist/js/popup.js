const developersUrl="https://github.com/ericvan76/send-to-webhook",contentTa=document.getElementById("content"),webhookSel=document.getElementById("webhooks"),sendBtn=document.getElementById("send"),sendStatus=document.getElementById("send-status"),optionsMenu=document.getElementById("options"),devMenu=document.getElementById("developers"),issueMenu=document.getElementById("issues");let webhooks;function load_webhooks(){chrome.storage.sync.get({webhooks:"[]"},a=>{webhooks=JSON.parse(a.webhooks);for(let b=0;b<webhooks.length;b++){const a=document.createElement("option");a.value=b.toString(),a.text=webhooks[b].name,webhookSel.add(a)}})}function sendArbitrary(){const a=contentTa.value;if(-1!==webhookSel.selectedIndex){const b=webhooks[webhookSel.selectedIndex],c=b.action;if(sendStatus.className="",sendStatus.textContent="",void 0!==c){const{method:b,url:d,payload:e}=c;let f;void 0!==e&&(f=JSON.stringify(e).replace("%s",a)),fetch(d,{method:b||"POST",body:f,headers:{"content-type":"application/json"},mode:"no-cors"}).then(a=>{400<=a.status?(sendStatus.className="error",sendStatus.textContent=`Error: ${a.status}`):(sendStatus.className="",sendStatus.textContent=`Sent!`,setTimeout(()=>{sendStatus.className="",sendStatus.textContent=""},750))}).catch(a=>{sendStatus.className="error",sendStatus.textContent=`Error: ${a}`}),ga("set","checkProtocolTask",()=>{}),ga("send",{hitType:"event",eventCategory:"arbitrary",eventAction:"webhook"})}else sendStatus.className="error",sendStatus.textContent="Error: Webhook action is not defined."}}sendBtn.addEventListener("click",sendArbitrary),optionsMenu.addEventListener("click",()=>chrome.runtime.openOptionsPage()),devMenu.addEventListener("click",()=>chrome.tabs.create({url:developersUrl})),issueMenu.addEventListener("click",()=>chrome.tabs.create({url:`${developersUrl}/issues`})),document.addEventListener("DOMContentLoaded",load_webhooks);