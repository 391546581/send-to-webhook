function send(a,b){if(a!==void 0&&b!==void 0){const{method:c,url:d,payload:e}=b;fetch(d,{method:c,body:JSON.stringify(e).replace("%s",a)}).then(a=>{alert(`Status: ${a.status} - ${a.statusText}`)}).catch(a=>{alert(`Error: ${a}}`)}),ga("set","checkProtocolTask",()=>{}),ga("require","displayfeatures"),ga("send","pageview","/")}else alert("Could not send webhook, please check you configuration.")}chrome.storage.sync.get({webhooks:"[]"},a=>{const b=JSON.parse(a.webhooks);b.forEach(a=>{const b=a.targetUrlPatterns!==void 0&&0<a.targetUrlPatterns.length;b?(chrome.contextMenus.create({documentUrlPatterns:a.documentUrlPatterns,title:`Send link to ${a.name}`,contexts:["link"],targetUrlPatterns:a.targetUrlPatterns,onclick:b=>{send(b.linkUrl,a.action)}}),chrome.contextMenus.create({documentUrlPatterns:a.documentUrlPatterns,title:`Send image to ${a.name}`,contexts:["image"],targetUrlPatterns:a.targetUrlPatterns,onclick:b=>{send(b.srcUrl,a.action)}})):chrome.contextMenus.create({documentUrlPatterns:a.documentUrlPatterns,title:`Send "%s" to ${a.name}`,contexts:["selection"],onclick:b=>{send(b.selectionText,a.action)}})})});